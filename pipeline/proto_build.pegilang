pegilang "github.com/pegilang/scheme/v1"

import (
  "github.com/pegilang/core"
  "github.com/pegipkg/git-subscribe"
  "github.com/pegipkg/git-pull"
  "github.com/pegipkg/tool"
  "github.com/pegipkg/git-push"
  "github.com/pegipkg/regexp"
)

core.stream[core.message] gitChangeNotifications := git-subscibe({
    url: "./proto",
    match: regexp(`.proto$`),
})

core.message gitChangeNotification := gitChangeNotifications.each()

core.fs protoDir, core.error pullErr := git-pull({
    url: gitChangeNotification.url,
})

core.fs workdir := protoDir.cd("..")
core.fs outDir := workdir.cd("./cpp/")
core.url targetUrl = url.resolve("../cpp")

core.message buildInfo, core.error buildErr := tool({
    image: "arch",
    install: ["protobuf"],
    env: {
          PROTO_DIR: protoDir.path,
          CPP_DIR: outDir.path,
    },
    workdir: workdir,
    run: "/bin/bash -c",
    input: <<EOF
      protoc --cpp_out $CPP_DIR `find $PROTO_DIR | grep .proto$`
    EOF,
})

core.message pushInfo, core.error pushErr :=
    | buildInfo
    | git-push({
        to: targetUrl,
        from: outDir,
        filter: regexp(".*.cpp$"),
    })
